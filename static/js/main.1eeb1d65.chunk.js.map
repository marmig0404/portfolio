{"version":3,"sources":["components/assets/PortfolioLogo.svg","components/assets/DDCLogo1.png","components/views/common/Landing.js","components/views/common/SocialBar.js","components/views/portfolio/Home.js","components/views/company/Home.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Landing","className","this","props","src","logo","alt","header","signature","Component","SocialBar","uuidv4","require","contentList","map","item","key","role","aria-labelledby","contactType","href","contactLink","PortfolioHome","CompanyHome","color","App","basename","path","component","exact","Boolean","window","location","hostname","match","app","rel","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,sC,ySCGtBC,G,mLAGjB,OACE,yBAAKC,UAAWC,KAAKC,MAAMF,UAAY,QACrC,4BAAQA,UAAWC,KAAKC,MAAMF,UAAY,WACxC,yBAAKG,IAAKF,KAAKC,MAAME,KAAMJ,UAAWC,KAAKC,MAAMF,UAAY,QAASK,IAAI,SAC1E,4BAAKJ,KAAKC,MAAMI,QAChB,uBAAGN,UAAWC,KAAKC,MAAMF,UAAY,cAClCC,KAAKC,MAAMK,iB,GATaC,cCAhBC,G,6KAEjB,IAAMC,EAASC,EAAQ,IACjBC,EAAcX,KAAKC,MAAMU,YAC/B,OACE,yBAAKZ,UAAU,cACZY,EAAYC,KAAI,SAAAC,GAAI,OACnB,yBAAKd,UAAU,OAAOe,IAAKL,KACzB,0BAAMM,KAAK,MAAMC,kBAAiBH,EAAKI,aACrC,uBACEC,KAAML,EAAKM,YACXpB,UAAW,SAAWc,EAAKI,aAE3B,yC,GAbuBV,c,iBCYlBa,E,uKAwDX,OACE,yBAAKrB,UAAU,qBACb,kBAAC,EAAD,CAASA,UAAY,oBAAoBI,KAAOA,IAAME,OAAO,gBAAgBC,UAAU,uBACvF,kBAAC,EAAD,CAAWK,YAzDM,CACnB,CACEM,YAAa,SACbE,YAAa,iCAEf,CACEF,YAAa,WACbE,YAAa,+BAEf,CACEF,YAAa,WACbE,YAAa,4CAEf,CACEF,YAAa,OACbE,YAAa,4CA0C2BpB,UAAU,gB,GA3DrBQ,a,yBCTtBc,E,uKAYb,OACI,yBAAKtB,UAAU,mBACX,kBAAC,EAAD,CAASI,KAAMA,IAAME,OAAO,kBAAkBC,UAAU,qCAAqCP,UAAU,oBACvG,kBAAC,EAAD,CAAWY,YAbI,CACnB,CACEM,YAAa,UACbE,YAAa,kCAEf,CACEF,YAAa,WACbE,YAAa,4BAM6BpB,UAAU,SAASuB,MAAM,iB,GAfxCf,aCK1B,SAASgB,IAEtB,OACE,kBAAC,IAAD,CAAQC,SAAS,KACf,yBAAKzB,UAAU,eACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0B,KAAK,WAAWC,UAAWL,IAClC,kBAAC,IAAD,CAAOM,OAAK,EAACF,KAAK,IAAIC,UAAWN,OCNvBQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZN,IAAMC,EACJ,6BACE,0BAAMC,IAAI,aACRhB,KAAK,uFACP,kBAAC,EAAD,CAAKnB,UAAU,SAGnBoC,IAASC,OAAOH,EAAKI,SAASC,eAAe,SDoHvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1eeb1d65.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PortfolioLogo.a79b5359.svg\";","module.exports = __webpack_public_path__ + \"static/media/DDCLogo1.754bec92.png\";","import React, { Component } from \"react\";\r\nimport \"./../../../stylesheets/Landing.css\";\r\n\r\nexport default class Landing extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.className + \"-div\"}>\r\n        <header className={this.props.className + \"-header\"}>\r\n          <img src={this.props.logo} className={this.props.className + \"-logo\"} alt=\"logo\" />\r\n          <h1>{this.props.header}</h1>\r\n          <p className={this.props.className + \"-signature\"}>\r\n            {this.props.signature}\r\n          </p>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./../../../stylesheets/SocialBar.css\";\r\n\r\nexport default class SocialBar extends Component {\r\n  render() {\r\n    const uuidv4 = require(\"uuid/v4\");\r\n    const contentList = this.props.contentList;\r\n    return (\r\n      <div className=\"sb-wrapper\">\r\n        {contentList.map(item => (\r\n          <div className=\"cell\" key={uuidv4()}>\r\n            <span role=\"img\" aria-labelledby={item.contactType}>\r\n              <a\r\n                href={item.contactLink}\r\n                className={\"fa fa-\" + item.contactType}\r\n              >\r\n                <div />\r\n              </a>\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./../../../stylesheets/PortfolioHome.css\";\r\nimport Landing from \"../common/Landing\";\r\nimport SocialBar from \"../common/SocialBar\";\r\nimport logo from \"../../assets/PortfolioLogo.svg\"\r\n/* \r\nimport CollapsibleList from \"./CollapsibleList\";\r\nimport About from \"./About\";\r\nimport Education from \"./Education\";\r\nimport KULogo from \"./assets/ketteringlogo.png\";\r\nimport IAMLogo from \"./assets/iamlogo.png\";\r\nimport Experience from \"./Experience\";\r\n*/\r\n\r\n\r\nexport default class PortfolioHome extends Component{\r\n    render(){\r\n        const contactContent = [\r\n            {\r\n              contactType: \"github\",\r\n              contactLink: \"https://github.com/marmig0404\"\r\n            },\r\n            {\r\n              contactType: \"envelope\",\r\n              contactLink: \"mailto:marmig0404@gmail.com\"\r\n            },\r\n            {\r\n              contactType: \"linkedin\",\r\n              contactLink: \"https://www.linkedin.com/in/martinmiglio\"\r\n            },\r\n            {\r\n              contactType: \"cube\",\r\n              contactLink: \"https://www.thingiverse.com/marmig0404/\"\r\n            }\r\n          ];\r\n        \r\n          /*\r\n          const educationContent = [\r\n            {\r\n              imageSource: KULogo,\r\n              header: \"Kettering University\",\r\n              body: \"KU Body\"\r\n            },\r\n            {\r\n              imageSource: IAMLogo,\r\n              header: \"International Academy of Macomb\",\r\n              body: \"IAM Body\"\r\n            }\r\n          ];\r\n        \r\n          const aboutContent = {\r\n            //imageSource:ProfilePic,\r\n            header: \"Martin Miglio\",\r\n            body: \"About Body\"\r\n          };\r\n        \r\n          const collapsibleListContent = [{\r\n            trigger: \"About\",\r\n            content: <About contentList={aboutContent} />\r\n          },\r\n          {\r\n            trigger: \"Education\",\r\n            content: <Education contentList={educationContent} />\r\n          },\r\n          {\r\n            trigger: \"Experience\",\r\n            content: <Experience />\r\n          },\r\n          ];\r\n          */\r\n        \r\n          return (\r\n            <div className=\"portfolio-wrapper\" >\r\n              <Landing className = \"portfolio-landing\" logo= {logo} header=\"Martin Miglio\" signature=\"Welcome to my page\" />\r\n              <SocialBar contentList={contactContent} className=\"social\" />\r\n              {/*<CollapsibleList contentList={collapsibleListContent} className=\"list\" />*/}\r\n            </div>\r\n          );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport \"./../../../stylesheets/CompanyHome.css\";\r\nimport SocialBar from \"../common/SocialBar\";\r\nimport Landing from \"../common/Landing\";\r\nimport logo from \"../../assets/DDCLogo1.png\";\r\n\r\nexport default class CompanyHome extends Component{\r\n    render(){\r\n        const contactContent = [\r\n            {\r\n              contactType: \"twitter\",\r\n              contactLink: \"https://twitter.com/digidevllc\"\r\n            },\r\n            {\r\n              contactType: \"envelope\",\r\n              contactLink: \"mailto:mail@digidev.lcc\"\r\n            },\r\n          ];\r\n        return(\r\n            <div className=\"company-wrapper\">\r\n                <Landing logo={logo} header=\"Come back soon!\" signature=\"Check Twitter for updates or email\" className=\"company-landing\"/>\r\n                <SocialBar contentList={contactContent} className=\"social\" color=\"#282c34\"/>              \r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { \r\n  HashRouter as Router,\r\n  Route, \r\n  Switch\r\n} from 'react-router-dom';\r\n\r\nimport \"./../stylesheets/App.css\";\r\nimport PortfolioHome from \"./views/portfolio/Home\";\r\nimport CompanyHome from \"./views/company/Home\";\r\n\r\nexport default function App()\r\n{\r\n  return (\r\n    <Router basename=\"/\">\r\n      <div className=\"app-wrapper\" >             \r\n        <Switch>\r\n          <Route path=\"/company\" component={CompanyHome}/>\r\n          <Route exact path=\"/\" component={PortfolioHome}/>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./stylesheets/index.css\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst app = (\r\n  <div>\r\n    <link rel=\"stylesheet\"\r\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\" />\r\n    <App className=\"app\" />\r\n  </div>\r\n);\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}